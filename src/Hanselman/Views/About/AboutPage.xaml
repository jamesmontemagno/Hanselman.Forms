<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="Hanselman.Views.AboutPage"
    xmlns="http://xamarin.com/schemas/2014/forms"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:d="http://xamarin.com/schemas/2014/forms/design"
    xmlns:ios="clr-namespace:Xamarin.Forms.PlatformConfiguration.iOSSpecific;assembly=Xamarin.Forms.Core"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="clr-namespace:Hanselman.Models;assembly=Hanselman"
    xmlns:modelsShared="clr-namespace:Hanselman.Models;assembly=Hanselman.Shared"
    xmlns:pancake="clr-namespace:Xamarin.Forms.PancakeView;assembly=Xamarin.Forms.PancakeView"
    xmlns:viewmodels="clr-namespace:Hanselman.ViewModels"
    Title="Scott Hanselman"
    ios:Page.ModalPresentationStyle="FormSheet"
    ios:Page.UseSafeArea="True"
    x:DataType="viewmodels:AboutViewModel"
    BackgroundColor="{DynamicResource WindowBackgroundColor}"
    mc:Ignorable="d">
    <d:ContentPage.BindingContext>
        <viewmodels:AboutViewModel />
    </d:ContentPage.BindingContext>

    <ContentPage.Resources>
        <ResourceDictionary>
            <Style x:Key="ImageButtonSocial" TargetType="ImageButton">
                <Setter Property="BackgroundColor" Value="Transparent" />
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>
    <Grid RowSpacing="0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Label
            Grid.ColumnSpan="2"
            Margin="10"
            HorizontalOptions="Center"
            Style="{DynamicResource LargeLabelStyle}"
            Text="Scott Hanselman"
            VerticalOptions="Center" />
        <ImageButton
            Grid.Column="1"
            Margin="10"
            BackgroundColor="Transparent"
            Command="{Binding GoToSettingsCommand}"
            HeightRequest="32"
            WidthRequest="32">
            <ImageButton.Source>
                <FontImageSource
                    FontFamily="{StaticResource MaterialFontFamilyIcon}"
                    Glyph="{StaticResource IconSettings}"
                    Color="{DynamicResource SystemGray}" />
            </ImageButton.Source>
        </ImageButton>



        <ScrollView Grid.Row="1" Grid.ColumnSpan="2">

            <StackLayout Orientation="Vertical" Spacing="0">
                <Label
                    Margin="10,0"
                    IsVisible="{Binding HasData}"
                    Style="{DynamicResource LargeLabelStyle}"
                    Text="Featured"
                    VerticalOptions="Center" />
                <CarouselView
                    x:Name="CarouselFeaturedItems"
                    HeightRequest="150"
                    HorizontalScrollBarVisibility="Never"
                    IndicatorView="IndicatorViewFeaturedItems"
                    IsVisible="{Binding HasData}"
                    ItemsSource="{Binding FeaturedItems}"
                    PeekAreaInsets="75">
                    <CarouselView.EmptyView>
                        <ActivityIndicator
                            HorizontalOptions="CenterAndExpand"
                            IsRunning="{Binding IsBusy}"
                            IsVisible="{Binding IsBusy}"
                            VerticalOptions="Center" />
                    </CarouselView.EmptyView>
                    <CarouselView.ItemTemplate>
                        <DataTemplate x:DataType="modelsShared:FeaturedItem">

                            <StackLayout>
                                <Frame
                                    Margin="8"
                                    Padding="0,0,0,0"
                                    CornerRadius="8"
                                    InputTransparent="True"
                                    Style="{DynamicResource FrameStyle}">

                                    <Grid RowSpacing="0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="125" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid>
                                            <Image Aspect="AspectFill" Source="{Binding Image}" />
                                            <pancake:PancakeView
                                                BackgroundGradientEndColor="{DynamicResource SystemBlue}"
                                                BackgroundGradientStartColor="#10000000"
                                                HorizontalOptions="FillAndExpand"
                                                VerticalOptions="FillAndExpand" />
                                            <Label
                                                Margin="16,8"
                                                FontAttributes="Bold"
                                                FontSize="Small"
                                                Text="{Binding Title}"
                                                TextColor="White"
                                                VerticalOptions="End" />
                                        </Grid>
                                    </Grid>
                                </Frame>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="CurrentItem">
                                            <VisualState.Setters>
                                                <Setter Property="Scale" Value="1" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="PreviousItem">
                                            <VisualState.Setters>
                                                <Setter Property="Opacity" Value="0.4" />
                                                <Setter Property="Scale" Value=".9" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="NextItem">
                                            <VisualState.Setters>
                                                <Setter Property="Opacity" Value="0.4" />
                                                <Setter Property="Scale" Value=".9" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="DefaultItem">
                                            <VisualState.Setters>
                                                <Setter Property="Opacity" Value="0.25" />
                                                <Setter Property="Scale" Value=".9" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </StackLayout>
                        </DataTemplate>
                    </CarouselView.ItemTemplate>
                </CarouselView>
                <IndicatorView
                    x:Name="IndicatorViewFeaturedItems"
                    HorizontalOptions="Center"
                    IndicatorColor="{DynamicResource SystemGray}"
                    IndicatorSize="8"
                    IndicatorsShape="Circle"
                    IsVisible="{Binding HasData}"
                    SelectedIndicatorColor="{DynamicResource PrimaryColor}" />
                <Label
                    Margin="10,10,10,0"
                    Style="{DynamicResource LargeLabelStyle}"
                    Text="About Scott"
                    VerticalOptions="Center" />
                <Frame
                    Margin="10,10"
                    Padding="0"
                    Style="{DynamicResource FrameStyle}">
                    <StackLayout>
                        <Image
                            Aspect="AspectFill"
                            HeightRequest="200"
                            Source="scott.png" />
                        <Label
                            Margin="8"
                            LineBreakMode="WordWrap"
                            Style="{DynamicResource SmallLabelStyle}"
                            Text="My name is Scott Hanselman. I'm a programmer, teacher, and speaker. I work out of my home office in Portland, Oregon for the Web Platform Team at Microsoft, but this blog, its content and opinions are my own. I blog about technology, culture, gadgets, diversity, code, the web, where we're going and where we've been. I'm excited about community, social equity, media, entrepreneurship and above all, the open web." />
                        <StackLayout
                            BindableLayout.ItemsSource="{Binding SocialItems}"
                            HorizontalOptions="CenterAndExpand"
                            Orientation="Horizontal"
                            Spacing="5">
                            <BindableLayout.ItemTemplate>
                                <DataTemplate x:DataType="models:SocialItem">
                                    <ImageButton
                                        Padding="8"
                                        BackgroundColor="Transparent"
                                        BorderColor="Transparent"
                                        BorderWidth="0"
                                        Command="{Binding OpenUrlCommand}">
                                        <ImageButton.Source>
                                            <FontImageSource
                                                FontFamily="{DynamicResource MaterialFontFamilyIcon}"
                                                Glyph="{Binding Icon}"
                                                Size="36"
                                                Color="{DynamicResource SystemGray}" />
                                        </ImageButton.Source>
                                    </ImageButton>
                                </DataTemplate>
                            </BindableLayout.ItemTemplate>
                        </StackLayout>
                    </StackLayout>
                </Frame>
            </StackLayout>
        </ScrollView>
    </Grid>
</ContentPage>